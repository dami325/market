version: '3'
services:

  influxdb:
    image: bitnami/influxdb
    container_name: influxdb
    ports:
      - "8086:8086"
      - "8088:8088"
    environment:
      - INFLUXDB_ADMIN_USER_PASSWORD=bitnami123
      - INFLUXDB_ADMIN_USER_TOKEN=admintoken123
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_DB=myk6db
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  granafa:
    image: bitnami/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./infra/grafana_data:/var/lib/grafana

  mysql:
    image: mysql:8.0
    container_name: market_mysql
    ports:
      - "13306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=dami
      - MYSQL_PASSWORD=1234
      - MYSQL_DATABASE=market
    volumes:
      - ./infra/mysql/:/var/lib/mysql

  redis:
    image: redis:7.4.1
    container_name: market_redis
    ports:
      - 16379:6379
    volumes:
      - ./infra/redis/data:/data
      - ./infra/redis/config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  kafka: # Kafka 브로커/컨트롤러를 실행하는 서비스
    image: confluentinc/cp-kafka:latest  # Confluent Kafka 공식 이미지 사용
    ports:
      - "29092:29092"  # 호스트 29092 -> 컨테이너 29092 매핑
    environment:
      KAFKA_NODE_ID: 1  # KRaft 모드에서 노드 ID
      KAFKA_PROCESS_ROLES: 'broker,controller'  # 브로커와 컨트롤러 역할 동시 수행
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'  # 컨트롤러 합의에 참여할 노드 정보
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092'  # 리스너 설정
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'  # 외부/내부 접속 광고 주소
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'  # 프로토콜 맵
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'  # 컨트롤러 리스너 이름
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'  # 브로커 간 통신 리스너
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # 오프셋 토픽 복제 팩터
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1  # 트랜잭션 상태 로그 복제 팩터
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='  # KRaft 클러스터 식별자
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'  # Kafka 로그 저장 디렉토리

  kafka-ui: # Kafka UI 대시보드를 실행하는 서비스
    image: provectuslabs/kafka-ui:latest  # Kafka UI 이미지
    ports:
      - "8081:8080"  # 호스트 8080 -> 컨테이너 8080 매핑
    environment:
      KAFKA_CLUSTERS_0_NAME: local  # UI 상에서 표시될 클러스터 이름
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092  # Kafka 브로커 부트스트랩 서버 주소
    depends_on:
      - kafka  # kafka-ui 실행 전에 kafka 서비스부터 실행
networks:
  default:
    driver: bridge
